import { Injectable, Component, NgModule, defineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class UploadCsvService {
    constructor() { }
}
UploadCsvService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] },
];
/** @nocollapse */
UploadCsvService.ctorParameters = () => [];
/** @nocollapse */ UploadCsvService.ngInjectableDef = defineInjectable({ factory: function UploadCsvService_Factory() { return new UploadCsvService(); }, token: UploadCsvService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class UploadCsvComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
UploadCsvComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-upload-csv',
                template: `
    <p>
      upload-csv works!
    </p>
  `,
                styles: []
            },] },
];
/** @nocollapse */
UploadCsvComponent.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class UploadCsvModule {
}
UploadCsvModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                declarations: [UploadCsvComponent],
                exports: [UploadCsvComponent]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { UploadCsvService, UploadCsvComponent, UploadCsvModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLWNzdi5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vdXBsb2FkLWNzdi9saWIvdXBsb2FkLWNzdi5zZXJ2aWNlLnRzIiwibmc6Ly91cGxvYWQtY3N2L2xpYi91cGxvYWQtY3N2LmNvbXBvbmVudC50cyIsIm5nOi8vdXBsb2FkLWNzdi9saWIvdXBsb2FkLWNzdi5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBVcGxvYWRDc3ZTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxufVxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXVwbG9hZC1jc3YnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxwPlxuICAgICAgdXBsb2FkLWNzdiB3b3JrcyFcbiAgICA8L3A+XG4gIGAsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgVXBsb2FkQ3N2Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVcGxvYWRDc3ZDb21wb25lbnQgfSBmcm9tICcuL3VwbG9hZC1jc3YuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtVcGxvYWRDc3ZDb21wb25lbnRdLFxuICBleHBvcnRzOiBbVXBsb2FkQ3N2Q29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBVcGxvYWRDc3ZNb2R1bGUgeyB9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7SUFPRSxpQkFBaUI7OztZQUxsQixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7Ozs7Ozs7QUNKRDtJQWFFLGlCQUFpQjs7OztJQUVqQixRQUFRO0tBQ1A7OztZQWRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixRQUFRLEVBQUU7Ozs7R0FJVDtnQkFDRCxNQUFNLEVBQUUsRUFBRTthQUNYOzs7Ozs7Ozs7QUNWRDs7O1lBR0MsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxFQUNSO2dCQUNELFlBQVksRUFBRSxDQUFDLGtCQUFrQixDQUFDO2dCQUNsQyxPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQzthQUM5Qjs7Ozs7Ozs7Ozs7Ozs7OyJ9